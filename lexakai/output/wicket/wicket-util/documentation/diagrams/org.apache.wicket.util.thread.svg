<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="500px" preserveAspectRatio="none" style="width:325px;height:500px;background:#333333;" version="1.1" viewBox="0 0 325 500" width="325px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="312.5" x="2.0833" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="289.5833" x="13.5417" y="30.5583">org.apache.wicket.util.thread</text><!--MD5=[aee5f20ac6abeabd6413dd512fac5dde]
class ICode--><rect codeLine="6" fill="#282828" height="83.3781" id="ICode" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="127.0833" x="77.6042" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="127.0833" x="77.6042" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="127.0833" x="77.6042" y="76.7578"/><rect codeLine="6" fill="none" height="83.3781" id="ICode" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="127.0833" x="77.6042" y="53.7028"/><ellipse cx="115.625" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M113.029,66.5588 L113.029,64.9719 L118.455,64.9719 L118.455,66.5588 L116.6423,66.5588 L116.6423,72.4976 L118.455,72.4976 L118.455,74.0845 L113.029,74.0845 L113.029,72.4976 L114.8417,72.4976 L114.8417,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="37.5" x="137.5" y="74.1211">ICode</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="78.6458" x2="203.6458" y1="85.0911" y2="85.0911"/><ellipse cx="89.0625" cy="120.461" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="100.5208" y="127.3722">void run(Logger)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="78.6458" x2="111.4583" y1="103.2969" y2="103.2969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="114.5833" y="107.1065">(lifecycle)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="170.8333" x2="203.6458" y1="103.2969" y2="103.2969"/><!--MD5=[05bef9715505055a435a5b60deea392b]
class Lock--><rect codeLine="12" fill="#282828" height="48.055" id="Lock" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="67.7083" x="241.6667" y="71.4111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="67.7083" x="241.6667" y="71.4111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="67.7083" x="241.6667" y="94.4661"/><rect codeLine="12" fill="none" height="48.055" id="Lock" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="67.7083" x="241.6667" y="71.4111"/><ellipse cx="256.25" cy="87.1053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M258.1604,91.5304 Q257.7332,91.7501 257.2632,91.8599 Q256.7932,91.9698 256.2744,91.9698 Q254.4312,91.9698 253.4607,90.7552 Q252.4902,89.5406 252.4902,87.2457 Q252.4902,84.9447 253.4607,83.7301 Q254.4312,82.5155 256.2744,82.5155 Q256.7932,82.5155 257.2693,82.6253 Q257.7454,82.7352 258.1604,82.9549 L258.1604,84.9569 Q257.6965,84.5296 257.2601,84.3313 Q256.8237,84.1329 256.3599,84.1329 Q255.3711,84.1329 254.8676,84.9172 Q254.364,85.7015 254.364,87.2457 Q254.364,88.7838 254.8676,89.5681 Q255.3711,90.3524 256.3599,90.3524 Q256.8237,90.3524 257.2601,90.154 Q257.6965,89.9556 258.1604,89.5284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="30.2083" x="272.9167" y="91.8294">Lock</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="242.7083" x2="308.3333" y1="102.7995" y2="102.7995"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="242.7083" x2="308.3333" y1="111.1328" y2="111.1328"/><!--MD5=[b34797a66dc35cbf1d65f7e3ca75530e]
class Task--><rect codeLine="16" fill="#282828" height="293.3268" id="Task" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="234.375" x="23.9583" y="199.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="234.375" x="23.9583" y="199.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="234.375" x="23.9583" y="222.5911"/><rect codeLine="16" fill="none" height="293.3268" id="Task" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="234.375" x="23.9583" y="199.5361"/><ellipse cx="118.2292" cy="215.2303" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M120.1396,219.6554 Q119.7123,219.8751 119.2424,219.9849 Q118.7724,220.0948 118.2536,220.0948 Q116.4103,220.0948 115.4399,218.8802 Q114.4694,217.6656 114.4694,215.3707 Q114.4694,213.0697 115.4399,211.8551 Q116.4103,210.6405 118.2536,210.6405 Q118.7724,210.6405 119.2485,210.7503 Q119.7245,210.8602 120.1396,211.0799 L120.1396,213.0819 Q119.6757,212.6546 119.2393,212.4563 Q118.8029,212.2579 118.339,212.2579 Q117.3503,212.2579 116.8467,213.0422 Q116.3432,213.8265 116.3432,215.3707 Q116.3432,216.9088 116.8467,217.6931 Q117.3503,218.4774 118.339,218.4774 Q118.8029,218.4774 119.2393,218.279 Q119.6757,218.0806 120.1396,217.6534 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="31.25" x="141.1458" y="219.9544">Task</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="25" x2="257.2917" y1="230.9245" y2="230.9245"/><ellipse cx="35.4167" cy="266.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="67.7083" x="46.875" y="273.2056">Task(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="25" x2="97.3958" y1="249.1302" y2="249.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="100.5208" y="252.9399">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="184.8958" x2="257.2917" y1="249.1302" y2="249.1302"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="25" x2="257.2917" y1="282.9142" y2="282.9142"/><ellipse cx="35.4167" cy="294.3726" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="46.875" y="301.2838">int getPriority()</text><ellipse cx="35.4167" cy="314.1174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="190.625" x="46.875" y="321.0286">void setDaemon(boolean daemon)</text><ellipse cx="35.4167" cy="333.8623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="46.875" y="340.7735">void setLog(Logger)</text><ellipse cx="35.4167" cy="353.6072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="133.3333" x="46.875" y="360.5184">void setPriority(int prio)</text><polygon fill="#FFFF44" points="35.4167,368.1437,39.5833,372.3104,35.4167,376.4771,31.25,372.3104" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="89.5833" x="46.875" y="380.2633">Logger getLog()</text><ellipse cx="35.4167" cy="417.0085" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="85.4167" x="46.875" y="423.9197">void interrupt()</text><ellipse cx="35.4167" cy="436.7533" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="202.0833" x="46.875" y="443.6646">void run(Duration frequency, ICode)</text><ellipse cx="35.4167" cy="456.4982" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="200" x="46.875" y="463.4094">void setStartTime(Instant startTime)</text><ellipse cx="35.4167" cy="476.2431" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="46.875" y="483.1543">void stop()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="25" x2="111.4583" y1="399.8444" y2="399.8444"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="114.5833" y="403.654">(lifecycle)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="170.8333" x2="257.2917" y1="399.8444" y2="399.8444"/><!--MD5=[42834f9419e098634a46a4429a87e4bf]
link ICode to Lock--><!--MD5=[f822b193a3f7e8abd2cb92abadca202e]
link ICode to Task--><!--MD5=[8b4010dc8957d1f9a610dafcb3398dbf]
@startuml

    !include lexakai.theme
    
    title "org.apache.wicket.util.thread"
    
    interface ICode
    {
        - -(lifecycle)- -
        +void run(Logger)
    }
    
    class Lock
    {
    }
    
    class Task
    {
        - -(constructors)- -
        +Task(String)
        - -
        +int getPriority()
        +void setDaemon(boolean daemon)
        +void setLog(Logger)
        +void setPriority(int prio)
        #Logger getLog()
        - -(lifecycle)- -
        +void interrupt()
        +void run(Duration frequency, ICode)
        +void setStartTime(Instant startTime)
        +void stop()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "org.apache.wicket.util.thread"
    
    interface ICode
    {
        - -(lifecycle)- -
        +void run(Logger)
    }
    
    class Lock
    {
    }
    
    class Task
    {
        - -(constructors)- -
        +Task(String)
        - -
        +int getPriority()
        +void setDaemon(boolean daemon)
        +void setLog(Logger)
        +void setPriority(int prio)
        #Logger getLog()
        - -(lifecycle)- -
        +void interrupt()
        +void run(Duration frequency, ICode)
        +void setStartTime(Instant startTime)
        +void stop()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>