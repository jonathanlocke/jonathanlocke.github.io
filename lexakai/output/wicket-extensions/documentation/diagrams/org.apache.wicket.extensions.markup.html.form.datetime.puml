@startuml

    !include lexakai.theme
    
    title "org.apache.wicket.extensions.markup.html.form.datetime"
    
    abstract AbstractDateTimeField
    
    interface IModel
    interface ITextFormatProvider
    
    enum TimeField.AM_PM
    {
        AM
        PM
    }
    
    FormComponentPanel <|-- AbstractDateTimeField
    abstract class AbstractDateTimeField<T>
    {
        --(constructors)--
        +AbstractDateTimeField(String)
        +AbstractDateTimeField(String, IModel<T>)
        --
        #T createTemporal(LocalDate, LocalTime)
        #LocalDateTextField getDateField()
        #LocalDate getLocalDate(T temporal)
        --(factory)--
        #LocalDateTextField newDateField(String id, IModel<LocalDate> dateFieldModel)
        --(time)--
        #LocalTime getDefaultTime()
        #LocalTime getLocalTime(T temporal)
        #TimeField getTimeField()
        #TimeField newTimeField(String id, IModel<LocalTime> timeFieldModel)
    }
    
    IModel <|-- TimeField.AmPmModel
    class TimeField.AmPmModel
    {
    }
    
    IModel <|-- AbstractDateTimeField.DateModel
    class AbstractDateTimeField.DateModel
    {
    }
    
    IModel <|-- TimeField.HoursModel
    class TimeField.HoursModel
    {
    }
    
    TextField <|-- LocalDateTextField
    AbstractTextComponent.ITextFormatProvider <|-- LocalDateTextField
    class LocalDateTextField
    {
        --(constructors)--
        +LocalDateTextField(String, FormatStyle)
        +LocalDateTextField(String, IModel<LocalDate>, FormatStyle)
        +LocalDateTextField(String, IModel<LocalDate>, String, String)
        +LocalDateTextField(String, IModel<LocalDate>, String)
        +LocalDateTextField(String, String)
    }
    
    AbstractDateTimeField <|-- LocalDateTimeField
    class LocalDateTimeField
    {
        --(constructors)--
        +LocalDateTimeField(String)
        +LocalDateTimeField(String, IModel<LocalDateTime>)
    }
    
    TextField <|-- LocalDateTimeTextField
    AbstractTextComponent.ITextFormatProvider <|-- LocalDateTimeTextField
    class LocalDateTimeTextField
    {
        --(constructors)--
        +LocalDateTimeTextField(String, FormatStyle, FormatStyle)
        +LocalDateTimeTextField(String, IModel<LocalDateTime>, FormatStyle, FormatStyle)
        +LocalDateTimeTextField(String, IModel<LocalDateTime>, String)
        +LocalDateTimeTextField(String, String)
    }
    
    TextField <|-- LocalTimeTextField
    AbstractTextComponent.ITextFormatProvider <|-- LocalTimeTextField
    class LocalTimeTextField
    {
        --(constructors)--
        +LocalTimeTextField(String, FormatStyle)
        +LocalTimeTextField(String, IModel<LocalTime>, FormatStyle)
        +LocalTimeTextField(String, IModel<LocalTime>, String)
        +LocalTimeTextField(String, String)
    }
    
    IModel <|-- TimeField.MinutesModel
    class TimeField.MinutesModel
    {
    }
    
    LocalDateTimeConverter <|-- LocalDateTimeTextField.TextFormatConverter
    abstract class LocalDateTimeTextField.TextFormatConverter
    {
        --
        +String getTextFormat(Locale)
    }
    
    LocalTimeConverter <|-- LocalTimeTextField.TextFormatConverter
    abstract class LocalTimeTextField.TextFormatConverter
    {
        --
        +String getTextFormat(Locale)
    }
    
    LocalDateConverter <|-- LocalDateTextField.TextFormatConverter
    abstract class LocalDateTextField.TextFormatConverter
    {
        --
        +String getTextFormat(Locale)
    }
    
    FormComponentPanel <|-- TimeField
    class TimeField
    {
        --(constructors)--
        +TimeField(String)
        +TimeField(String, IModel<LocalTime>)
        --(time)--
        #TextField<Integer> newHoursTextField(String id, IModel<Integer>, Class<Integer> type)
        #TextField<Integer> newMinutesTextField(String id, IModel<Integer>, Class<Integer> type)
        #boolean use12HourFormat()
    }
    
    IModel <|-- AbstractDateTimeField.TimeModel
    class AbstractDateTimeField.TimeModel
    {
    }
    
    AbstractDateTimeField <|-- ZonedDateTimeField
    class ZonedDateTimeField
    {
        --(constructors)--
        +ZonedDateTimeField(String)
        +ZonedDateTimeField(String, IModel<ZonedDateTime>)
    }
    
    IModel <|-- ZonedToLocalDateTimeModel
    class ZonedToLocalDateTimeModel
    {
        --(constructors)--
        +ZonedToLocalDateTimeModel(IModel<ZonedDateTime>)
        --(time)--
        #ZoneId getClientTimeZone()
        #ZoneId getTargetTimeZone()
    }
    
@enduml

